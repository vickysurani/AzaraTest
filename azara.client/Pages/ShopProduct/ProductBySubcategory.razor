@page "/POSProduct_By_ID/{name}"
@using azara.client.Models.Inventory.Request;


@if (Loader == true)
{
    <!-- Preloader Start -->
    <div id="preloader">
        <div class="main-container">
            <!-- Circle animation img start -->
            <img src="./images/Azara_Pattern_Animation.svg" class="loader-circle img-fluid">
            <!-- Circle animation img end -->
            <!-- Azara logo start -->
            <div class="center-logo">
                <img src="images/azara-logo.svg" class="img-fluid logo" alt="Azara Logo">
            </div>
            <!-- Azara logo end -->
        </div>
    </div>
    <!-- Preloader End -->
}
else
{
    <main class="custom-main-section">
        <!-- Top Back Panel start -->
        <div class="position-fixed top-0 start-0 end-0 container">
            <div class="back-panel d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center justify-content-start">
                    <a onclick="backButton()" class="back"><img src="images/back-arrow.svg" class="img-fluid" alt="Back"></a>
                    <h1>Product By Subcategory</h1>
                </div>
            </div>
        </div>
        <!-- Top Back Panel end -->
        <!--******************* Middle Section Start ******************-->
        <!-- Featured Products start -->

        <section href="shop-product-list" class="featured-product-details position-relative xl-margin">
            <div class="container">

                @if (response.Details != null)
                {

                    @if (response.Details.Count != 0)
                    {
                        <div class="d-flex align-items-center justify-content-between mb-3 mb-md-4">
                            <h2 class="m-0">Featured Products</h2>
                            @if (response.Details.Count > 4)
                            {
                                <a href="shop-product-list" class="btn view-all-btn">View All</a>
                            }
                        </div>
                        @*<div class="row featured-product-row row-cols-1 row-cols-md-3 row-cols-lg-4 gx-3 gx-lg-4 justify-content-md-start">
            @foreach (var product in posInventoryResponse.Details.Take(4))
            {
            <div class="col">
            <div class="card featured-product-card position-relative">
            <span class="discount-label position-absolute">@product.Attribute</span>
            <a @onclick="e => GetByID(product.ListId, true)" class="card-img">
            <img src='@(!string.IsNullOrWhiteSpace(product.Image) ? product.Image : "https://azaradocument.blob.core.windows.net/user/DefaultIMG.png")' class="img-fluid" alt="Featured Products">
            </a>
            <div class="p-2">
            <h4 class="fw-500">@product.Attribute</h4>
            <div class="card-text d-flex align-items-start justify-content-between">
            <h5 class="m-0">
            <a>
            <img src="images/shop-icon.svg" class="img-fluid" alt="Shop">@product.Desc1
            </a>
            </h5>
            <div class="d-flex align-items-center justify-content-end ms-auto">
            <del>@String.Format("{0:C}", @product.Price1)</del>
            <h4>@String.Format("{0:C}", @product.Price2)</h4>
            </div>
            </div>
            </div>
            </div>
            </div>
            }
            </div>*@

                        <div class="row featured-product-row row-cols-1 row-cols-md-2 row-cols-lg-3 gx-3 gx-lg-4 justify-content-md-start" style="padding-top:3%">
                            @*@foreach (var product in posInventoryResponse.Details.Take(4))*@
                            @foreach (var product in response.Details.Take(3))
                            {
                                <div class="col">
                                    @*<div class="card featured-product-card position-relative">
                    <span class="discount-label position-absolute">@product.Attribute</span>
                    <a @onclick="e => GetByID(product.ListId, true)" class="card-img">
                    <img src='@(!string.IsNullOrWhiteSpace(product.Image) ? product.Image : "https://azaradocument.blob.core.windows.net/user/DefaultIMG.png")' class="img-fluid" alt="Featured Products">
                    </a>
                    <div class="p-2">
                    <h4 class="fw-500">@product.Attribute</h4>
                    <div class="card-text d-flex align-items-start justify-content-between">
                    <h5 class="m-0">
                    <a>
                    <img src="images/shop-icon.svg" class="img-fluid" alt="Shop">@product.Desc1
                    </a>
                    </h5>
                    <div class="d-flex align-items-center justify-content-end ms-auto">
                    <del>@String.Format("{0:C}", @product.Price1)</del>
                    <h4>@String.Format("{0:C}", @product.Price2)</h4>
                    </div>
                    </div>
                    </div>
                    </div>*@
                                    <div class="card featured-product-card position-relative">
                                        @* <div class="discount-label">
                        <span class="position-absolute">@product.Attribute</span>

                        </div>*@
                                        <div class="d-flex align-items-lg-start">
                                            <a class="card-img" @onclick="e => GetByID(product.ListId)">
                                                <img src='@(!string.IsNullOrWhiteSpace(product.Image) ? product.Image : "https://azaradocument.blob.core.windows.net/user/DefaultIMG.png")' class="img-fluid" alt="Featured Products">
                                            </a>
                                            <h4 class="fw-500 m-0">@product.Attribute</h4>
                                            @*<h5 class="fw-500 m-2">@product.Description</h5>*@
                                        </div>

                                        <div class="p-2 px-0 pt-3 pb-0 mt-3">
                                            <div class="card-text d-flex align-items-center justify-content-between">
                                                <h5 class="m-0">
                                                    <a class="mb-0">
                                                        @*<img src="images/shop-icon.svg" class="img-fluid" alt="Shop">@product.Description*@
                                                    </a>
                                                </h5>
                                                @*                                                <p class="p-1">@product.Description</p>
                                *@                                            <div class="d-flex align-items-center justify-content-end ms-auto">
                                                    <h4>$ @product.Price1</h4>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="row featured-product-row row-cols-1 row-cols-md-3 row-cols-lg-4 gx-3 gx-lg-4 justify-content-md-center">
                            <section class=" py-5 position-relative d-flex align-items-center justify-content-center">
                                <div class="no-data-found text-center">
                                    <img src="images/no-data-found.svg" class="img-fluid" alt="No Data Found">
                                    <h2>Oppps...</h2>
                                    <h4>Product Not Found please try again</h4>
                                </div>
                            </section>
                        </div>
                    }
                    <!-- row -->
                }
            </div>
        </section>
    </main>
}
@code {
    int lenth;
    bool Loader = true;
    [Parameter]
    public string name { get; set; }

    POSInventoryListRequest request = new POSInventoryListRequest();

    PosInventoryResponse response = new PosInventoryResponse();

    POSItemInventoryResponse pOSItemInventoryResponse = new POSItemInventoryResponse();

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("token");

        await ProductbySubCategory();
    }

    internal async Task ProductbySubCategory()
    {
        Loader = true;
        request.Desc1 = name;
        var result = await ShopProductHelpers.ProductBySubCategory(request);
        if (result.meta.statusCode == StatusCodeConsts.UnAuthorized)
        {
            await localStorage.SetItemAsync("token", string.Empty);
            NavManager.NavigateTo("/");
        }
        else
        {
            if (result.meta.statusCode == StatusCodeConsts.Success)
            {
                response = JsonConvert.DeserializeObject<PosInventoryResponse>(result.data);
            }
            else if (result.meta.statusCode == StatusCodeConsts.BadRequest)
                await JsRuntime.InvokeVoidAsync("ShowToastr", "error", "Error");
            else
                await JsRuntime.InvokeVoidAsync("ShowErrorConfirmationModel");
        }
        StateHasChanged();
        Loader = false;

    }

    internal void GetByID(string id)
    {
        int key = 3;
        var cipheredId = GenericHelper.Encipher(id, key);
        NavManager.NavigateTo($"/shop-pos-product-list-detail/{cipheredId}");
        StateHasChanged();
    }
}
