@page "/shop-pos-product-list-detail/{Id}"
@using System.Text.Json.Nodes;
@using azara.client.Models.ShopProduct.Request;

@layout LoginLayout

<PageTitle>@ClientTitleModel.ShopProductTitle</PageTitle>

<main class="custom-main-section">

    <!--******************* Header Section Start *********************-->
    <!-- Top Back Panel start -->
    <div class="position-fixed top-0 start-0 end-0 container">
        <div class="back-panel d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center justify-content-start">
                <a onclick="backButton()" class="back"><img src="images/back-arrow.svg" class="img-fluid" alt="Back"></a>
                <h1>@response.Attribute</h1>
            </div>
        </div>
    </div>
    <!-- Top Back Panel end -->
    <!--******************* Header Section End *********************-->

    <section class="common-padding position-relative xs-padding">
        <div class="container">
            <div class="row">
                <div class="col-12 mx-auto">

                    <div class="row">
                        <div class="col-lg-6">
                            <div class="product-details-slider position-relative">
                                @*<div class="discount-label">OfferName</div>*@
                                <!-- slider start -->
                                <div thumbsSlider="" class="swiper productSwiper">
                                    <div class="swiper-wrapper">
                                        <div class="swiper-slide">
                                            <img src='@(!string.IsNullOrWhiteSpace(response.Image) ? response.Image : "https://azaradocument.blob.core.windows.net/user/DefaultIMG.png")' class="img-fluid" alt="Featured Products">
                                        </div>
                                    </div>
                                </div>
                                <!-- slider end -->
                            </div>
                            <!-- Product Details Slider end -->
                        </div>
                        <!-- col -->
                        <div class="col-lg-6">
                            <div class="product-details-slider position-relative">
                                <!-- caption start -->
                                <div class="product-slider-caption featured-product-card position-relative bg-transparent rounded-0">
                                    <h2>@response.Attribute</h2>
                                    <div class="card-text d-flex align-items-center justify-content-between">
                                        <h5 class="m-0">
                                            @*  <a href="#"><img src="images/shop-icon.svg" class="img-fluid me-3 shop-icon" alt="Shop">@response.Attribute</a>*@
                                        </h5>
                                        <div class="d-flex align-items-center justify-content-between">
                                            <del>@String.Format("{0:C}", @response.Price1)</del>
                                            <h4>@String.Format("{0:C}", @response.Price2)</h4>
                                        </div>
                                    </div>
                                </div>
                                <h5 class="m-0">
                                    <h3>@response.Desc1</h3>
                                </h5>
                                <br />

                                @if (response.StoreDetails != null)
                                {
                                    @if (response.StoreDetails.Count != 0)
                                    {
                                        <h5 class="m-0">
                                            <h3>store :-</h3>
                                        </h5>
                                        <br />

                                        @foreach (var store in response.StoreDetails.Where(w => w.IsLocationFound))
                                        {
                                            <h5 class="m-0">
                                                <h4>@store.Name</h4>
                                            </h5>
                                            <br/>

                                        }
                                    }
                                }
                                <!-- caption end -->
                            </div>

                            <div class="product-description border-bottom-0 mb-0">
                                <h3>Description</h3>
                                @if (lenth != null && lenth > 300)
                                {
                                    <div class="collapse show" id="collapseExample">
                                        <p>
                                            @response.Description.Substring(0,100) ...
                                        </p>
                                    </div>
                                    <div class="collapse" id="collapseExample">
                                        <p>
                                            @response.Description
                                        </p>
                                    </div>
                                }
                                else
                                {
                                    <p>
                                        @response.Description
                                    </p>
                                }
                            </div>
                            @if (lenth != null && lenth > 300)
                            {
                                <a class="readmore-button collapsed" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample"></a>
                            }
                        </div>
                    </div>
                    <!-- col -->
                </div>
                <!-- row -->
            </div>
            <!-- col -->
        </div>
        <!-- row -->
    </section>
</main>
@if (Loader == true)
{
       <!-- Preloader Start -->
  <div id="preloader">
    <div class="main-container">
      <!-- Circle animation img start -->
      <img src="./images/Azara_Pattern_Animation.svg" class="loader-circle img-fluid">
      <!-- Circle animation img end -->
  
      <!-- Azara logo start -->
      <div class="center-logo">
        <img src="images/azara-logo.svg" class="img-fluid logo" alt="Azara Logo">
      </div>
      <!-- Azara logo end -->
    </div>
  </div>
  <!-- Preloader End -->
}
@code {
    int lenth;
    bool Loader = true;
    [Parameter]
    public string Id { get; set; }

    PosByIdRequest request = new PosByIdRequest();
    PosInventoryGetByIdResponse response = new PosInventoryGetByIdResponse();
    ListRequest listRequest = new ListRequest();

    List<string> ImageList = new();
    string userId;
    bool IsUsed = false;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("token");
        userId = await localStorage.GetItemAsync<string>("userId");
        var location = await JsRuntime.InvokeAsync<JsonArray>("getCoords");

        if (location != null)
        {
            await localStorage.SetItemAsync("locationDetail", location.ToString());
            request.LocationDetail = location.ToString();
        }

        Id = GenericHelper.Decipher(Id, 3);
        await LoadData();
    }

    private async Task LoadData()
    {
        Loader = true;
        if (!string.IsNullOrWhiteSpace(Id))
        {
            Id = GenericHelper.Decipher(Id, 3);
            request.Id = Id;
            var result = await ShopProductHelpers.GetPosInventoryItem(request);
            if (result.meta.statusCode == StatusCodeConsts.Success)
            {
                response = JsonConvert.DeserializeObject<PosInventoryGetByIdResponse>(result.data);
            }
            else if (result.meta.statusCode == StatusCodeConsts.BadRequest)
            {
                await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{345345}");
                return;
            }
            else
            {
                await JsRuntime.InvokeVoidAsync("ShowToastr", "error", "Something was wrong");
                return;
            }
            Loader = false;
        }
        else
        {
            Loader = false;
            NavManager.NavigateTo("/index");

        }
    }



}
