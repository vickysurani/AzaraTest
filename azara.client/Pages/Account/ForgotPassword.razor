@page "/forgot-password"
@page "/forgot-password/{isValidEmail:bool}"
@layout LoginLayout

@using azara.client.Helpers.Generic
<PageTitle>@ClientTitleModel.ForgotPasswordTitle</PageTitle>

@if (Loader)
{
       <!-- Preloader Start -->
  <div id="preloader">
    <div class="main-container">
      <!-- Circle animation img start -->
      <img src="./images/Azara_Pattern_Animation.svg" class="loader-circle img-fluid">
      <!-- Circle animation img end -->
  
      <!-- Azara logo start -->
      <div class="center-logo">
        <img src="images/azara-logo.svg" class="img-fluid logo" alt="Azara Logo">
      </div>
      <!-- Azara logo end -->
    </div>
  </div>
  <!-- Preloader End -->
}
else @if (IsValidEmail)
{
    <div class="login-details min-vh-100">
        <div class="row">
            <div class="col-md-7 col-lg-5 col-xxl-4 mx-auto">
                <div class="email-msg-section position-relative">
                    <a onclick="backButton()" class="back"><img src="images/back-arrow.svg" class="img-fluid" alt="Back"></a>
                    <h2>just one more step...</h2>
                    <p>Please check your email and click the provided to finish resetting your password.</p>
                    <p>You may need to check your spam / junk folder.</p>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!--******************* Middle Section Start ******************-->
    <main>
        <div class="position-fixed top-0 start-0 end-0 container">
            <div class="back-panel d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center justify-content-start">
                    <a onclick="backButton()" class="back"><img src="images/back-arrow.svg" class="img-fluid" alt="Back"></a>
                    <h1>Forgot Password</h1>
                </div>
            </div>
        </div>
        <section class="position-relative overflow-x-hidden pt-3 pt-md-0">
            <div class="container">
                <div class="login-details min-vh-100">
                    <div class="row">
                        <div class="col-md-7 col-lg-6 col-xl-5 col-xxl-4 mx-auto">
                            <h1>Forgot Password</h1>
                            <p>
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                            </p>
                            <EditForm Model="forgotPasswordRequest" OnValidSubmit="SendOTP">
                                <DataAnnotationsValidator />
                                <div class="row needs-validation">
                                    <div class="form-group col-12">
                                        <label for="email" class="form-label">Email address</label>
                                        <div class="input-group">
                                            <span class="input-group-text" id="emaillabel">
                                                <img src="images/email-icon.svg" class="img-fluid"
                                                 alt="Email">
                                            </span>
                                            <input type="email" @bind-value="forgotPasswordRequest.EmailId" class="form-control" id="email" placeholder="azara@email.com"
                                               aria-describedby="emaillabel">
                                        </div>
                                        <ValidationMessage For="@(() => forgotPasswordRequest.EmailId)" />
                                        <div class="invalid-feedback">
                                            Error Message
                                        </div>
                                    </div>
                                    <!-- col -->
                                    <div class="col-12">
                                        <button type="submit" href="reset-password" class="btn btn-common">Submit</button>
                                    </div>
                                    <!-- col -->
                                </div>
                                <!-- row -->
                            </EditForm>
                        </div>
                        <!-- col -->
                    </div>
                    <!-- row -->
                </div>
            </div>
            <!-- background Circle Shape start -->
            <img src="images/bg-top-circle.svg" class="img-fluid bg-top-circle position-absolute top-0 end-0" alt="Circle">
            <img src="images/bg-half-circle.svg" class="img-fluid bg-left-circle position-absolute bottom-0 start-0" alt="Circle">
            <img src="images/bg-half-circle.svg" class="img-fluid bg-right-circle position-absolute bottom-0 end-0" alt="Circle">
            <!-- background Circle Shape end -->
            <!-- bg Circle Wave Animation start -->
            <div class="login-waves position-fixed bottom-0 start-0 end-0">
                <div class="bg-circle-wave">
                    <span class="wave s1"></span>
                    <span class="wave s2"></span>
                    <span class="wave s3"></span>
                    <span class="wave s4"></span>
                </div>
            </div>
            <!-- bg Circle Wave Animation end -->
        </section>
    </main>
}
<!--******************* Middle Section End ******************-->
@code {

    [Parameter]
    public bool IsValidEmail { get; set; } = false;

    private bool Loader { get; set; } = false;
    ForgotPasswordRequest forgotPasswordRequest = new ForgotPasswordRequest();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await localStorage.GetItemAsync<string>("token");
            if (token != null && token != string.Empty && token == TokenResponse.Token)
            {
                NavManager.NavigateTo("/");
            }
            StateHasChanged();
        }
    }

    internal async Task SendOTP()
    {
        Loader = true;
        var result = await AccountHelpers.ForgotPasswordApi(forgotPasswordRequest);
        if (result.meta.statusCode == StatusCodeConsts.Success)
        {
            string emailId = GenericHelper.Encipher(forgotPasswordRequest.EmailId, 3);
            NavManager.NavigateTo($"/forgot-password/true");
        }
        else if (result.meta.statusCode == StatusCodeConsts.BadRequest)
        {
            if (result.meta.message[0].Equals("Email not found."))
            {
                await JsRuntime.InvokeVoidAsync("ShowToastr", "success", $"{result.meta.message[0]}");
                NavManager.NavigateTo("/forgot-password");
            }
            else
                await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{result.meta.message[0]}");
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{result.meta.message[0]}");
            return;
        }

        Loader = false;
        StateHasChanged();
    }
}
