@page "/change-password"

<PageTitle>@ClientTitleModel.ChangePasswordTitle</PageTitle>

<!--******************* Middle Section Start ******************-->
<main>
    <!-- Top Back Panel start -->
    <div class="position-fixed top-0 start-0 end-0 container">
        <div class="back-panel d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center justify-content-start">
                <a onclick="backButton()" class="back"><img src="images/back-arrow.svg" class="img-fluid" alt="Back"></a>
                <h1>Change Password</h1>
            </div>
        </div>
    </div>
    <!-- Top Back Panel end -->
    <!-- Edit Profile start -->
    <section class="change-pwd-section login-details common-padding position-relative overflow-x-hidden min-vh-100 justify-content-start">
        <div class="container">
            <div class="row">
                <div class="col-12 col-md-6 col-lg-5 col-xl-4 mx-auto">
                    <EditForm Model="changePasswordRequest" OnValidSubmit="ChnagePasssword">
                        <DataAnnotationsValidator />
                        <div class="row">
                            <div class="form-group col-12">
                                <label for="text" class="form-label">Current Password</label>
                                <div class="input-group eye-icons">
                                    <span class="input-group-text">
                                        <img src="images/password-form-icon.svg"
                                             class="img-fluid" alt="Password">
                                    </span>
                                    <input type="@TextNewType" @bind-value="changePasswordRequest.CurrentPassword" class="form-control" placeholder="Enter CurrentPassword"
                                           aria-describedby="newpwdlabel">
                                    <button class="@ConfirmClassnew" @onclick="ShowPasswordnew"><img src="@EyeIconNew" class="img-fluid" alt="User"></button>
                                </div>
                                <ValidationMessage For="@(() => changePasswordRequest.CurrentPassword)" />
                            </div>
                            <!-- col -->
                            <div class="form-group col-12">
                                <label for="text" class="form-label">New Password</label>
                                <div class="input-group eye-icons">
                                    <span class="input-group-text">
                                        <img src="images/password-form-icon.svg"
                                             class="img-fluid" alt="Password">
                                    </span>
                                    <input type="@TextType" @bind-value="changePasswordRequest.Password" class="form-control" placeholder="Enter New Password"
                                           aria-describedby="newpwdlabel">
                                    <button class="@Class" @onclick="ShowPassword"><img src="@EyeIcon" class="img-fluid" alt="User"></button>
                                </div>
                                <ValidationMessage For="@(() => changePasswordRequest.Password)" />
                            </div>
                            <!-- col -->
                            <div class="form-group col-12">
                                <label for="text" class="form-label">Confirm Password</label>
                                <div class="input-group eye-icons">
                                    <span class="input-group-text">
                                        <img src="images/password-form-icon.svg"
                                             class="img-fluid" alt="Password">
                                    </span>
                                    <input type="@TextConfirmType" @bind-value="changePasswordRequest.ConfirmPassword" class="form-control" placeholder="Enter Confirm Password"
                                           aria-describedby="newpwdlabel">
                                    <button class="@ConfirmClass" @onclick="ShowPasswordConfirm"><img src="@EyeIconConfirm" class="img-fluid" alt="User"></button>
                                </div>
                                <ValidationMessage For="@(() => changePasswordRequest.ConfirmPassword)" />
                            </div>
                            <!-- col -->
                            <!-- col -->
                            <div class="col-12">
                                <button type="submit" class="btn btn-common">Submit<span></span></button>
                            </div>
                            <!-- col -->
                        </div>
                        <!-- row -->
                    </EditForm>
                    <!-- col -->
                </div>
                <!-- row -->
            </div>
        </div>

        <!-- background Circle Shape start -->
        <img src="images/bg-half-circle.svg" class="img-fluid bg-left-circle position-absolute bottom-0 start-0" alt="Circle">
        <img src="images/bg-half-circle.svg" class="img-fluid bg-right-circle position-absolute bottom-0 end-0" alt="Circle">
        <!-- background Circle Shape end -->
    </section>
    <!-- Edit Profile end -->
</main>
<!--******************* Middle Section End ******************-->
@code {
    bool Loader = true;

    public string EyeIcon = "images/Eye-Off.svg";
    public string EyeIconConfirm = "images/Eye-Off.svg";
    protected string TextType = "password";
    protected string TextConfirmType = "password";
    public string Class = "btn-pwd hide-icon";
    public string ConfirmClass = "btn-pwd hide-icon";
    public string ConfirmClassnew = "btn-pwd hide-icon";
    public string EyeIconNew = "images/Eye-Off.svg";
    protected string TextNewType = "password";




    ChangePasswordRequest changePasswordRequest = new ChangePasswordRequest();


    protected override async Task OnInitializedAsync()
    {
        Loader = false;
        var token = await localStorage.GetItemAsync<string>("token");
        if (token != null && token != string.Empty && token == TokenResponse.Token)
        {
            var userId = await localStorage.GetItemAsync<string>("userId");
        }
        else
            NavManager.NavigateTo("/");
        Loader = true;
    }

    internal async Task ChnagePasssword()
    {
        var result = await AccountHelpers.ChaangePasswordPApi(changePasswordRequest);
        if (result.meta.statusCode == StatusCodeConsts.Success)
        {
            NavManager.NavigateTo("/profile");
        }
        else if (result.meta.statusCode == StatusCodeConsts.BadRequest)
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{Loc["error_current_password_same_with_new_password"]}");

            NavManager.NavigateTo("/change-password");
        }
        else
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{Loc["error_something_went_wrong"]}");

    }


   protected void ShowPassword()
    {
        if (this.TextType.Equals("password"))
        {
            Class = "btn-pwd";
            TextType = "text";
            EyeIcon = "images/Eye-On.svg";
        }
        else
        {
            EyeIcon = "images/Eye-Off.svg";
            TextType = "password";
            Class = "btn-pwd hide-icon";
        }
    }

    protected void ShowPasswordConfirm()
    {
        if (this.TextConfirmType.Equals("password"))
        {
            TextConfirmType = "text";
            EyeIconConfirm = "images/Eye-On.svg";
            ConfirmClass = "btn-pwd";
        }
        else
        {
            EyeIconConfirm = "images/Eye-Off.svg";
            TextConfirmType = "password";
            ConfirmClass = "btn-pwd hide-icon";
        }
    }

    protected void ShowPasswordnew()
    {
        if (this.TextNewType.Equals("password"))
        {
            TextNewType = "text";
            EyeIconNew = "images/Eye-On.svg";
            ConfirmClassnew = "btn-pwd";
        }
        else
        {
            EyeIconNew = "images/Eye-Off.svg";
            TextNewType = "password";
            ConfirmClassnew = "btn-pwd hide-icon";
        }
    }
}
