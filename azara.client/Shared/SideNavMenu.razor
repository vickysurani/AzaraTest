@inherits LayoutComponentBase

<!-- Side Navigation Menu start -->
<div class="modal fade left side-navigation-menu-modal" id="side-navigation-menu" tabindex="-1"
     aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <div class="modal-body">
                <ul class="menu-list">
                    <li><button @onclick="ClickAboutUs" class="btn-common p-0" data-bs-dismiss="modal">About Us</button></li>
                    <li><button @onclick="Blog" class="btn-common p-0" data-bs-dismiss="modal">Blogs</button></li>
                    <li><button @onclick="FQA" class="btn-common p-0" data-bs-dismiss="modal">FAQ</button></li>
                    <li><button class="btn-common p-0" data-bs-dismiss="modal" @onclick="ClickContactUs">Contact Us</button></li>
                    <li><button @onclick="TandC" class="btn-common p-0" data-bs-dismiss="modal">Terms & Conditions</button></li>
                    <li><button @onclick="Event" class="btn-common p-0" data-bs-dismiss="modal">Event</button></li>
                    <li><button @onclick="Contest" class="btn-common p-0" data-bs-dismiss="modal">Contest</button></li>
                    <li><button class="btn-common p-0" data-bs-dismiss="modal" @onclick="PrivacyPolicy">Privacy Policy</button></li>
                    <li><button class="btn-common p-0" data-bs-dismiss="modal" @onclick="Logout">Logout</button></li>
                </ul>
            </div>
            <!-- bg Circle Wave Animation start -->
            <div class="bg-circle-wave">
                <span class="wave s1"></span>
                <span class="wave s2"></span>
                <span class="wave s3"></span>
                <span class="wave s4"></span>
            </div>
            <!-- bg Circle Wave Animation end -->
        </div>
    </div>
</div>
<!-- Side Navigation Menu start -->
@code {

    protected override async Task OnInitializedAsync()
    {
        
    }

    internal async Task Logout()
    {
        var UserId = await localStorage.GetItemAsync<string>("userId");
        var UniqueId = await localStorage.GetItemAsync<string>("uniqueId");
        var result = await AccountHelpers.LogoutApi();
        if (result.meta.statusCode == StatusCodeConsts.UnAuthorized)
        {
            await localStorage.ClearAsync();
            NavManager.NavigateTo("/homelanding");
        }
        else
        {
            if (result.meta.statusCode == StatusCodeConsts.Success)
            {
                await localStorage.ClearAsync();
                NavManager.NavigateTo("/homelanding");
                await JsRuntime.InvokeVoidAsync("ShowToastr", "success", "Successfully logout!");
            }
            else
            {
                await localStorage.ClearAsync();
                NavManager.NavigateTo("/homelanding");
                await JsRuntime.InvokeVoidAsync("ShowToastr", "Something went wrong!");
            }
        }
        StateHasChanged();
    }
        
    internal async Task ClickAboutUs()
    {
        NavManager.NavigateTo("/about-us");
    }

    internal async Task pos_cos()
    {
        NavManager.NavigateTo("/customer_pos");
    }

    internal async Task pos_com()
    {
        NavManager.NavigateTo("/company_pos");
    }

    internal async Task ClickContactUs()
    {
        NavManager.NavigateTo("/contact-us");
    }

    internal async Task Blog()
    {
        NavManager.NavigateTo("/blog");
    }

    internal async Task FQA()
    {
        NavManager.NavigateTo("/fqa");
    }

    internal async Task TandC()
    {
        NavManager.NavigateTo("/tandc");
    }
    
    internal async Task Event()
    {
        NavManager.NavigateTo("/event");
    }

     internal async Task Contest()
    {
        NavManager.NavigateTo("/contest");
    }
    internal async Task PrivacyPolicy()
    {
        NavManager.NavigateTo("/privacyPolicy");
    }

}
