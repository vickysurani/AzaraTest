// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azara.repository;

#nullable disable

namespace azara.repository.Migrations
{
    [DbContext(typeof(AzaraContext))]
    [Migration("20230223123729_removeteamidfromadmin")]
    partial class removeteamidfromadmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("azara.models.Entities.AdminAccessTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AdminAccessToken");
                });

            modelBuilder.Entity("azara.models.Entities.AdminEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentRevisionNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Otp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("OtpExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("azara.models.Entities.BannerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BannerImage1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerImage2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerImage3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("azara.models.Entities.BlogsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("azara.models.Entities.ChatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdminRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("azara.models.Entities.ContactUsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("azara.models.Entities.ContestsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("azara.models.Entities.CouponsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CouponsPoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("azara.models.Entities.CustomerViewEntity", b =>
                {
                    b.Property<string>("ListID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AmountPastDue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustomerDiscPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDiscType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAcceptingChecks")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNoShipToBilling")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOkToEMail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRewardsMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingChargeAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingWithQB")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ListID");

                    b.ToView("VW_Customer");
                });

            modelBuilder.Entity("azara.models.Entities.DealsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BannerImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("azara.models.Entities.EventsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("azara.models.Entities.FacebookRewardSharingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RewardEarned")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacebookRewardSharings");
                });

            modelBuilder.Entity("azara.models.Entities.FAQsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("azara.models.Entities.MasterRolesEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MasterRoles");
                });

            modelBuilder.Entity("azara.models.Entities.MenuEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FontIconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionCsv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("azara.models.Entities.MyRewardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("AvailableRewards")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CouponsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PunchCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("RemainingRewards")
                        .HasColumnType("bit");

                    b.Property<string>("RemainingRewards1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemainingRewards11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RewardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("UsedRewards")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CouponsId");

                    b.HasIndex("PunchCardId");

                    b.HasIndex("RewardId");

                    b.HasIndex("UserId");

                    b.ToTable("MyReward");
                });

            modelBuilder.Entity("azara.models.Entities.NotificationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReadableTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("azara.models.Entities.OffersEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("azara.models.Entities.PointManagementEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PointManagement");
                });

            modelBuilder.Entity("azara.models.Entities.PointsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AvailablePoints")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsedPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("azara.models.Entities.POSCustomerListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AmountPastDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSalesLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustomerDiscPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDiscType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAcceptingChecks")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNoShipToBilling")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOkToEMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRewardsMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingChargeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingWithQB")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POSCustomer");
                });

            modelBuilder.Entity("azara.models.Entities.POSCustomerRewardsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AmountPastDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSalesLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CustomerDiscPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDiscType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FQPrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAcceptingChecks")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNoShipToBilling")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOkToEMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRewardsMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingChargeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingWithQB")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RewardAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RewardEarnedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RewardExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RewardMatureDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("RewardPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RewardSeqNo")
                        .HasColumnType("int");

                    b.Property<string>("RewardStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POSRewardTbl");
                });

            modelBuilder.Entity("azara.models.Entities.POSDepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DefaultMarginPercent")
                        .HasColumnType("int");

                    b.Property<int>("DefaultMarkupPercent")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("POSDepartments");
                });

            modelBuilder.Entity("azara.models.Entities.POSInventoryDemoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COGSAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBelowReorder")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEligibleForCommission")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrintingTags")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnorderable")
                        .HasColumnType("bit");

                    b.Property<int>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("ItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarginPercent")
                        .HasColumnType("int");

                    b.Property<int>("MarkupPercent")
                        .HasColumnType("int");

                    b.Property<decimal?>("OnHandStore01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore18")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore19")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore20")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderByUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnCustomerOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnPendingOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderPointStore01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellByUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure1ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure1MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure1UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure1UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure2ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure2MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure2UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure2UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure3ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure3MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure3UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure3UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo2ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo2OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo2UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo2VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo3ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo3OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo3UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo3VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo4ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo4OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo4UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo4VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo5ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo5OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo5UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo5VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebCategories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WebPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WebSKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("POSInventoryDemo");
                });

            modelBuilder.Entity("azara.models.Entities.POSInventoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COGSAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncomeAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBelowReorder")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEligibleForCommission")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrintingTags")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUnorderable")
                        .HasColumnType("bit");

                    b.Property<int>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("ItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSRP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarginPercent")
                        .HasColumnType("int");

                    b.Property<int>("MarkupPercent")
                        .HasColumnType("int");

                    b.Property<decimal?>("OnHandStore01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore18")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore19")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore20")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrderByUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnCustomerOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QuantityOnPendingOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReorderPointStore01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellByUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure1ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure1MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure1Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure1UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure1UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure2ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure2MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure2Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure2UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure2UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure3ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitOfMeasure3MSRP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3NumberOfBaseUnits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("UnitOfMeasure3Price5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitOfMeasure3UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure3UnitOfMeasure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo2ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo2OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo2UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo2VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo3ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo3OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo3UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo3VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo4ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo4OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo4UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo4VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo5ALU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VendorInfo5OrderCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorInfo5UPC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorInfo5VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebCategories")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WebPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WebSKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("POSInventory");
                });

            modelBuilder.Entity("azara.models.Entities.POSSales.POSSalesReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Associate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cashier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FQSaveToCache")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryDocStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemsCount")
                        .HasColumnType("int");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderTxnID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesReceiptNumber")
                        .HasColumnType("int");

                    b.Property<string>("SalesReceiptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingInformationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationShipBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ShippingInformationShipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingInformationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TaxPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount06TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount07TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount08TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount09TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount10TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck01CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck02CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck03CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck04CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck05CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck06CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck07CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck08CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck09CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck10CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard01CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard02CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard03CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard04CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard05CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard01Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard02Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard03Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard04Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard05Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift01GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift02GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift03GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift04GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift05GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift06GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift07GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift08GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift09GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift10GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TxnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TxnID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Workstation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("POSSalesReceipt");
                });

            modelBuilder.Entity("azara.models.Entities.POSSales.POSSalesReceiptTMP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Associate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPhone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingInformationStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cashier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FQSaveToCache")
                        .HasColumnType("bit");

                    b.Property<string>("HistoryDocStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemsCount")
                        .HasColumnType("int");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderTxnID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesReceiptNumber")
                        .HasColumnType("int");

                    b.Property<string>("SalesReceiptType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingInformationCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPhone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationShipBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ShippingInformationShipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingInformationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TaxPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount06TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount07TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount08TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount09TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderAccount10TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCash10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck01CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck02CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck03CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck04CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck05CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck06CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck07CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck08CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck09CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCheck10CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCheck10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard01CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard02CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard03CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard04CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderCreditCard05CardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderCreditCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderCreditCard05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard01Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard02Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard03Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard04Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard05Cashback")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDebitCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderDeposit05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift01GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift02GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift03GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift04GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift05GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift06GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift06TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift07GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift07TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift08GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift08TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift09GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift09TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderGift10GiftCertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderGift10TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard01TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard01TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard02TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard02TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard03TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard03TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard04TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard04TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard05TenderAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TenderGiftCard05TipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TxnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TxnID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Workstation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("POSSalesReceiptTMP");
                });

            modelBuilder.Entity("azara.models.Entities.POSStore", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POSStore");
                });

            modelBuilder.Entity("azara.models.Entities.POSStoreEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OnHandStore01")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore02")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore03")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore04")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore05")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore06")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore07")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore08")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore09")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore11")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore12")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore13")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore14")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore16")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore17")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore18")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore19")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OnHandStore20")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POSStores");
                });

            modelBuilder.Entity("azara.models.Entities.ProductCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("azara.models.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RewardsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StoreDropdownId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductSubCategoryId");

                    b.HasIndex("RewardsId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("azara.models.Entities.ProductRequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductRequest");
                });

            modelBuilder.Entity("azara.models.Entities.ProductSubCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductSubCategory");
                });

            modelBuilder.Entity("azara.models.Entities.PunchCardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunchCardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunchCardPromos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PunchCards");
                });

            modelBuilder.Entity("azara.models.Entities.ReferralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferredTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Referral");
                });

            modelBuilder.Entity("azara.models.Entities.RewardsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RewardsExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RewardsPoint")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("UserId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("azara.models.Entities.StoreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("azara.models.Entities.TeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentRevision")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermissionJson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("azara.models.Entities.UserAccessTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserAccessToken");
                });

            modelBuilder.Entity("azara.models.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmailOtp")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime?>("EmailOtpExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Otp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("OtpExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<string>("SelfieImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("azara.models.Entities.UserEventsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserEvents");
                });

            modelBuilder.Entity("azara.models.Entities.View.AdminViewEntiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastLoginAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Master")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MobileVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Modified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtpExpireTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VW_ADMIN");
                });

            modelBuilder.Entity("azara.models.Entities.View.CompanyviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSampleCompany")
                        .HasColumnType("bit");

                    b.Property<string>("LayawayStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayawayStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel1Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel2Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel3Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel4Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel4Name4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCBuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCSerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksCompanyFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Store01StoreNumber")
                        .HasColumnType("int");

                    b.Property<string>("Store02AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreNumber")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VW_Company");
                });

            modelBuilder.Entity("azara.models.POSCustomerDemoListEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AmountPastDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSalesLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldSerial2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustomerDiscPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDiscType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAcceptingChecks")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsNoShipToBilling")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOkToEMail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRewardsMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingChargeAccount")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsingWithQB")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POSCustomerDemo");
                });

            modelBuilder.Entity("azara.models.Entities.AdminEntity", b =>
                {
                    b.HasOne("azara.models.Entities.MasterRolesEntity", "MasterRolesEntity")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("MasterRolesEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ChatEntity", b =>
                {
                    b.HasOne("azara.models.Entities.AdminEntity", "AdminEntity")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AdminEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.MyRewardEntity", b =>
                {
                    b.HasOne("azara.models.Entities.CouponsEntity", "CouponsEntity")
                        .WithMany()
                        .HasForeignKey("CouponsId");

                    b.HasOne("azara.models.Entities.PunchCardEntity", "PunchCardEntity")
                        .WithMany()
                        .HasForeignKey("PunchCardId");

                    b.HasOne("azara.models.Entities.RewardsEntity", "RewardsEntity")
                        .WithMany()
                        .HasForeignKey("RewardId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CouponsEntity");

                    b.Navigation("PunchCardEntity");

                    b.Navigation("RewardsEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.NotificationEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.PointsEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductEntity", b =>
                {
                    b.HasOne("azara.models.Entities.OffersEntity", "OffersEntity")
                        .WithMany()
                        .HasForeignKey("OfferId");

                    b.HasOne("azara.models.Entities.ProductCategoryEntity", "ProductCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("azara.models.Entities.ProductSubCategoryEntity", "ProductSubCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductSubCategoryId");

                    b.HasOne("azara.models.Entities.RewardsEntity", "RewardsEntity")
                        .WithMany()
                        .HasForeignKey("RewardsId");

                    b.Navigation("OffersEntity");

                    b.Navigation("ProductCategoryEntity");

                    b.Navigation("ProductSubCategoryEntity");

                    b.Navigation("RewardsEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductRequestEntity", b =>
                {
                    b.HasOne("azara.models.Entities.StoreEntity", "StoreEntity")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("StoreEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductSubCategoryEntity", b =>
                {
                    b.HasOne("azara.models.Entities.ProductCategoryEntity", "ProductCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.Navigation("ProductCategoryEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ReferralEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.RewardsEntity", b =>
                {
                    b.HasOne("azara.models.Entities.PointsEntity", "PointsEntity")
                        .WithMany()
                        .HasForeignKey("PointId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("PointsEntity");

                    b.Navigation("UserEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
