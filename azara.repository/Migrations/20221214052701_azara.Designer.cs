// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using azara.repository;

#nullable disable

namespace azara.repository.Migrations
{
    [DbContext(typeof(AzaraContext))]
    [Migration("20221214052701_azara")]
    partial class azara
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("azara.models.Entities.AdminAccessTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AdminAccessToken");
                });

            modelBuilder.Entity("azara.models.Entities.AdminEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Otp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("OtpExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("azara.models.Entities.AdvertisementsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdvertisementBannerImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvertisementTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("azara.models.Entities.BlogsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Descriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescriptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("azara.models.Entities.ChatEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdminRead")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUserRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("azara.models.Entities.ContactUsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("azara.models.Entities.ContestsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("azara.models.Entities.CouponsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CouponTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("azara.models.Entities.CustomerViewEntity", b =>
                {
                    b.Property<decimal?>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("AccountLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AmountPastDue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillAddressStreet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomFieldOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustomerDiscPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerDiscType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAcceptingChecks")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNoShipToBilling")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOkToEMail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRewardsMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingChargeAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingWithQB")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSale")
                        .HasColumnType("datetime2");

                    b.Property<string>("ListID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceLevelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreExchangeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebNumber")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VW_Customer");
                });

            modelBuilder.Entity("azara.models.Entities.EventsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("azara.models.Entities.FacebookRewardSharingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RewardEarned")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacebookRewardSharings");
                });

            modelBuilder.Entity("azara.models.Entities.FAQsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("azara.models.Entities.MyRewardsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("AvailableRewards")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CouponsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PunchCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("RemainingRewards")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RewardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("UsedRewards")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CouponsId");

                    b.HasIndex("PunchCardId");

                    b.HasIndex("RewardId");

                    b.HasIndex("UserId");

                    b.ToTable("MyRewards");
                });

            modelBuilder.Entity("azara.models.Entities.NotificationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReadableTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("azara.models.Entities.OffersEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("azara.models.Entities.PointsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AvailablePoints")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PointName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsedPoints")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("azara.models.Entities.ProductCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("azara.models.Entities.ProductEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OfferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductSubCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductSubCategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("azara.models.Entities.ProductRequestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ProductRequest");
                });

            modelBuilder.Entity("azara.models.Entities.ProductSubCategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("ProductCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("ProductSubCategory");
                });

            modelBuilder.Entity("azara.models.Entities.PunchCardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunchCardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunchCardPromos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PunchCards");
                });

            modelBuilder.Entity("azara.models.Entities.ReferralEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferralCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReferredTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Referral");
                });

            modelBuilder.Entity("azara.models.Entities.RewardsEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RewardsExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("UserId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("azara.models.Entities.StoreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("azara.models.Entities.UserAccessTokenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UniqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserAccessToken");
                });

            modelBuilder.Entity("azara.models.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmailOtp")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime?>("EmailOtpExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrontImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Otp")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("OtpExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelfieImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("azara.models.Entities.View.AdminViewEntiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Created")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastLoginAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Master")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MobileVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Modified")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Otp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtpExpireTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VW_ADMIN");
                });

            modelBuilder.Entity("azara.models.Entities.View.CompanyviewEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSampleCompany")
                        .HasColumnType("bit");

                    b.Property<string>("LayawayStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LayawayStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel1Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel2Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel3Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceLevel4Markdown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PriceLevel4Name4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCBuildNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCEdition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QODBCSerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuickBooksCompanyFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store01StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Store01StoreNumber")
                        .HasColumnType("int");

                    b.Property<string>("Store02AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store02StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store03StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store04StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store05StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store06StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store07StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store08StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store09StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10CityStateZIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10Misc3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Store10StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreNumber")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderStatusInfoStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkOrderStatusInfoStatusType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToView("VW_Company");
                });

            modelBuilder.Entity("azara.models.Entities.View.ItemInventoryViewEntity", b =>
                {
                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desc2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("VW_ItemInventory");
                });

            modelBuilder.Entity("azara.models.Entities.ChatEntity", b =>
                {
                    b.HasOne("azara.models.Entities.AdminEntity", "AdminEntity")
                        .WithMany()
                        .HasForeignKey("AdminId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("AdminEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.MyRewardsEntity", b =>
                {
                    b.HasOne("azara.models.Entities.CouponsEntity", "CouponsEntity")
                        .WithMany()
                        .HasForeignKey("CouponsId");

                    b.HasOne("azara.models.Entities.PunchCardEntity", "PunchCardEntity")
                        .WithMany()
                        .HasForeignKey("PunchCardId");

                    b.HasOne("azara.models.Entities.RewardsEntity", "RewardsEntity")
                        .WithMany()
                        .HasForeignKey("RewardId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CouponsEntity");

                    b.Navigation("PunchCardEntity");

                    b.Navigation("RewardsEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.NotificationEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.PointsEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductEntity", b =>
                {
                    b.HasOne("azara.models.Entities.OffersEntity", "OffersEntity")
                        .WithMany()
                        .HasForeignKey("OfferId");

                    b.HasOne("azara.models.Entities.ProductCategoryEntity", "ProductCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("azara.models.Entities.ProductSubCategoryEntity", "ProductSubCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductSubCategoryId");

                    b.HasOne("azara.models.Entities.StoreEntity", "StoreEntity")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.Navigation("OffersEntity");

                    b.Navigation("ProductCategoryEntity");

                    b.Navigation("ProductSubCategoryEntity");

                    b.Navigation("StoreEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductRequestEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ProductSubCategoryEntity", b =>
                {
                    b.HasOne("azara.models.Entities.ProductCategoryEntity", "ProductCategoryEntity")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.Navigation("ProductCategoryEntity");
                });

            modelBuilder.Entity("azara.models.Entities.ReferralEntity", b =>
                {
                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("azara.models.Entities.RewardsEntity", b =>
                {
                    b.HasOne("azara.models.Entities.PointsEntity", "PointsEntity")
                        .WithMany()
                        .HasForeignKey("PointId");

                    b.HasOne("azara.models.Entities.UserEntity", "UserEntity")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("PointsEntity");

                    b.Navigation("UserEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
