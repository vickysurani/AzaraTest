@page "/admin/forgot-password"
@page "/admin/forgot-password/{isValidEmail:bool}"
@layout LoginLayout

@using azara.admin.Models.Account.Request
@using azara.admin.Models.Base.Response
@using azara.admin.Models.Const

<PageTitle>@AdminTitleModel.AdminForgotPasswordTitle</PageTitle>

@if (Loader)
{
    <Loader></Loader>
}
else if (IsValidEmail)
{
    <div class="auth-sec align-item-center">
        <div class="logo-sec justify-center">
            @*<img src="images/big-logo.svg" alt="big-logo" />*@
             <img src="images/azara-logo.svg" alt="big-logo" />
        </div>
        <div class="auth-details">
            <div class="auth-width">
                <div class="bk-btn">
                    <a href="/admin/forgot-password"><i class="fa fa-arrow-left" aria-hidden="true"></i></a>
                </div>
                <h1 class="text-center">Just one more step...</h1>
                <p class="text-center">Please check your email and click the link provided to finish resetting your password.</p>
                <br />
                <p class="text-center">You may need to check your spam/junk folder.</p>
            </div>
        </div>
    </div>
}
else
{
    <div class="auth-sec align-item-center">
        <div class="logo-sec justify-center">
            <img src="images/azara-logo.svg" alt="big-logo" />
        </div>
        <div class="auth-details">
            <div class="auth-width">
                <div class="bk-btn">
                    <a href="/"><i class="fa fa-arrow-left" aria-hidden="true"></i></a>
                </div>
                <h1>Forgot Password</h1>
                <p>Please enter your registered Email Id to receive reset password link</p>
                <EditForm Model="forgotPasswordRequest" OnValidSubmit="SendOTP">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        @*<label class="addValidation">Email address</label>*@
                        <div class="input-group">
                            <div class="input-group-prepend px-1">
                                <span class="input-group-text" id="basic-addon1">
                                    <img src="images/email-ic.svg"
                                     alt="email-ic" />
                                </span>
                            </div>
                            <InputText type="email" @bind-Value="forgotPasswordRequest.EmailId" class="form-control" id="email" placeholder="Email Address"
                                   aria-label="Email Address" aria-describedby="basic-addon1" />
                        </div>
                        <div class="addValidation">
                            <ValidationMessage For="@(() => forgotPasswordRequest.EmailId)" />
                        </div>
                    </div>
                    <div class="signin-btn">
                        <input type="submit" value="Submit" />
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    
    [Parameter]
    public bool IsValidEmail { get; set; } = false;

    private bool Loader { get; set; }
    ForgotPasswordRequest forgotPasswordRequest { get; set; } = new ForgotPasswordRequest();
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await localStorage.GetItemAsync<string>("token");
            if (token != null && token != string.Empty && token == TokenResponse.Token)
            {
                NavManager.NavigateTo("/");
            }
            StateHasChanged();
        }
    }

    internal async Task SendOTP()
    {
        Loader = true;
        var result = await AccountHelper.ForgotPasswordApi(forgotPasswordRequest);

        if (result != null && result.meta.statusCode == StatusCodeConsts.Success)
        {
            NavManager.NavigateTo("/admin/forgot-password/true");
        }
        else if (result != null && result.meta.statusCode == StatusCodeConsts.BadRequest)
        {
            if (result.meta.message[0].Contains("Email not found."))
            {
                await JsRuntime.InvokeVoidAsync("ShowToastr", "error", "EmailId is not register!");
                NavManager.NavigateTo("/admin/forgot-password");
            }
        }
        else
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{result.meta.message}");
            return;
        }

        Loader = false;
    }
}
