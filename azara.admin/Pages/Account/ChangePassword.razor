@page "/change-password"
@using azara.admin.Models.Account.Request
@using azara.admin.Models.Base.Response
@using azara.admin.Models.Const

<PageTitle>@AdminTitleModel.AdminChangePasswordTitle</PageTitle>

<section class="main-content-right">
    <div class="custom-section-wrap">
        <div class="d-flex justify-space-between align-item-center">
            <div class="page-title">
                <h2 class="d-lg-block d-none">Change Password</h2>
                <span onclick="openNav()" class="d-lg-none d-block"><i class="fa fa-bars"></i></span>
            </div>
            <AdminProfile></AdminProfile>
        </div>
    </div>
    <h2 class="d-lg-none d-block mt-3">Change Password</h2>
    <div class="data-table-area">
        <EditForm Model="changePasswordRequest" OnValidSubmit="ChnagePasssword">
            <DataAnnotationsValidator />

            <div class="change-psw-section">
                <div class="row align-item-center">
                    <div class="col-md-7">
                        <div class="form-details">
                            <div class="form-group psw-icon">
                                <label>Current Password</label>
                                <InputText type="@TextType" class="form-control without-ic" id="password" @bind-Value="changePasswordRequest.CurrentPassword" aria-label="Password" placeholder="Password"/>
                                <span @onclick="ShowPassword"><i class="@EyeIcon" id="eyeIcon" aria-hidden="true"></i></span>
                                <ValidationMessage For="@(() => changePasswordRequest.CurrentPassword)" />
                            </div>
                            <div class="form-group psw-icon">
                                <label>New Password</label>
                                <InputText type="@TextNewType" class="form-control without-ic" id="newpassword" @bind-Value="changePasswordRequest.Password" aria-label="Password" placeholder="Password" />
                                <span @onclick="ShowNewPassword"><i class="@EyeIconNew" id="eyeIcon" aria-hidden="true"></i></span>
                                <ValidationMessage For="@(() => changePasswordRequest.Password)" />
                            </div>
                            <div class="form-group psw-icon">
                                <label>Confirm New Password</label>
                                <InputText type="@TextConfirmType" class="form-control without-ic" id="confirmpassword" @bind-Value="changePasswordRequest.ConfirmPassword" aria-label="Password" placeholder="Password" />
                                <span @onclick="ShowConfirmPassword"><i class="@EyeIconConfirm" id="eyeIcon" aria-hidden="true"></i></span>
                                <ValidationMessage For="@(() => changePasswordRequest.ConfirmPassword)" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 text-center">
                        <img src="images/change-psw.png" alt="change-psw">
                    </div>
                </div>
            </div>
            <div class="filter-area justify-start align-item-center mt-1">
                <div class="add-btn d-flex align-items-center">
                    <button type="submit" class="btn btn-common ml-0">Submit</button>
                    <a href="dashboard" class="cancel-btn">Cancel</a>
                </div>
                 
            </div>
        </EditForm>
    </div>
</section>


@code {

    bool Loader = true;
    public string EyeIcon = "fa fa-eye-slash";
    public string EyeIconNew = "fa fa-eye-slash";
    public string EyeIconConfirm = "fa fa-eye-slash";
    protected string TextType = "password";
    protected string TextNewType = "password";
    protected string TextConfirmType = "password";
    ChangePasswordRequest changePasswordRequest = new ChangePasswordRequest();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await localStorage.GetItemAsync<string>("token");
            if (token != null && token != string.Empty && token == TokenResponse.Token)
            {
                Loader = false;
            }
            else
            {
                await localStorage.ClearAsync();
                NavManager.NavigateTo("/");
            }
            StateHasChanged();
        }
    }

    internal async Task ChnagePasssword()
    {
        var result = await AccountHelper.ChaangePasswordPApi(changePasswordRequest);
        if (result.meta.statusCode == StatusCodeConsts.Success)
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", "success", "Password Changed Successfully!");
            await localStorage.ClearAsync();
            NavManager.NavigateTo("/");
            StateHasChanged();
        }
        else if (result.meta.statusCode == StatusCodeConsts.BadRequest)
        {
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{result.meta.message}");
            NavManager.NavigateTo("/change-password");
        }
        else
            await JsRuntime.InvokeVoidAsync("ShowToastr", "error", $"{result.meta.message}");


    }

    protected void ShowPassword()
    {
        if (this.TextType.Equals("password"))
        {
            EyeIcon = "fa fa-eye";
            TextType = "text";
        }
        else
        {
            EyeIcon = "fa fa-eye-slash";
            TextType = "password";
        }
    }

    protected void ShowNewPassword()
    {
        if (this.TextNewType.Equals("password"))
        {
            EyeIconNew = "fa fa-eye";
            TextNewType = "text";
        }
        else
        {
            EyeIconNew = "fa fa-eye-slash";
            TextNewType = "password";
        }
    }

    protected void ShowConfirmPassword()
    {
        if (this.TextConfirmType.Equals("password"))
        {
            EyeIconConfirm = "fa fa-eye";
            TextConfirmType = "text";
        }
        else
        {
            EyeIconConfirm = "fa fa-eye-slash";
            TextConfirmType = "password";
        }
    }


}
