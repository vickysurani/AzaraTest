@using azara.admin.Models.Shared

<div class="cmn-mar-top-24 pagination d-flex justify-content-center">
    @if (PagingParameter.TotalCount > PagingParameter.PageSize && PagingParameter.ShowFooter)
    {
        @if (PagingParameter.ShowPageNumber)
        {
            <ul class="d-flex justify-content-end">
                @if (PagingParameter.TotalPage > 5)
                {
                    @if (PagingParameter.CurrentPageNumber < 5)
                    {
                        for (int i = 1; i <= 5; i++)
                        {
                            var tempint = i;
                            if (i == PagingParameter.CurrentPageNumber)
                            {
                                <li @onclick="@(() => OnSetPage(tempint))"><a class="active cursor">@(i)</a></li>
                            }
                            else
                            {
                                <li @onclick="@(() => OnSetPage(tempint))"><a class="cursor">@(i)</a></li>
                            }
                        }
                        <li @onclick="@(() => OnSetPage(PagingParameter.CurrentPageNumber + 1))"><a class="cursor"><i class="fa fa-angle-double-right" aria-hidden="true"></i></a></li>
                    }
                    else
                    {
                        if (PagingParameter.CurrentPageNumber == PagingParameter.TotalPage)
                        {
                            <li @onclick="@(() => OnSetPage(PagingParameter.CurrentPageNumber - 1))"><a class="cursor"><i class="fa fa-angle-double-left" aria-hidden="true"></i></a></li>
                            for (int i = PagingParameter.TotalPage - 4; i <= PagingParameter.TotalPage; i++)
                            {
                                var tempint = i;
                                if (i == PagingParameter.CurrentPageNumber)
                                {
                                    <li @onclick="@(() => OnSetPage(tempint))"><a class="active cursor">@(i)</a></li>
                                }
                                else
                                {
                                    <li @onclick="@(() => OnSetPage(tempint))"><a class="cursor">@(i)</a></li>
                                }
                            }
                        }
                        else
                        {
                            if (PagingParameter.TotalPage > PagingParameter.CurrentPageNumber + 2)
                            {
                                <li @onclick="@(() => OnSetPage(PagingParameter.CurrentPageNumber - 1))"><a class="cursor"><i class="fa fa-angle-double-left" aria-hidden="true"></i></a></li>
                                for (int i = PagingParameter.CurrentPageNumber - 2; i <= PagingParameter.CurrentPageNumber + 2; i++)
                                {
                                    var tempint = i;
                                    if (i == PagingParameter.CurrentPageNumber)
                                    {
                                        <li @onclick="@(() => OnSetPage(tempint))"><a class="active cursor">@(i)</a></li>
                                    }
                                    else
                                    {
                                        <li @onclick="@(() => OnSetPage(tempint))"><a class="cursor">@(i)</a></li>
                                    }
                                }
                                <li @onclick="@(() => OnSetPage(PagingParameter.CurrentPageNumber + 1))"><a class="cursor"><i class="fa fa-angle-double-right" aria-hidden="true"></i></a></li>
                            }
                            else
                            {
                                <li @onclick="@(() => OnSetPage(PagingParameter.CurrentPageNumber - 1))"><a class="cursor"><i class="fa fa-angle-double-left" aria-hidden="true"></i></a></li>
                                for (int i = PagingParameter.TotalPage - 4; i <= PagingParameter.TotalPage; i++)
                                {
                                    var tempint = i;
                                    if (i == PagingParameter.CurrentPageNumber)
                                    {
                                        <li @onclick="@(() => OnSetPage(tempint))"><a class="active cursor">@(i)</a></li>
                                    }
                                    else
                                    {
                                        <li @onclick="@(() => OnSetPage(tempint))"><a class="cursor">@(i)</a></li>
                                    }
                                }
                            }
                        }
                    }
                }
                else
                {
                    for (int i = 1; i <= PagingParameter.TotalPage; i++)
                    {
                        var tempint = i;
                        if (i == PagingParameter.CurrentPageNumber)
                        {
                            <li @onclick="@(() => OnSetPage(tempint))"><a class="active cursor">@(i)</a></li>
                        }
                        else
                        {
                            <li @onclick="@(() => OnSetPage(tempint))"><a class="cursor">@(i)</a></li>
                        }
                    }
                }
            </ul>
        }
    }
</div>

@code
{
    [Parameter]
    public PagingParameter PagingParameter { get; set; }

    [Parameter]
    public PagingParameter ParentpagingParameter { get; set; }

    [Parameter]
    public EventCallback<int> SetPageChanged { get; set; }

    [Parameter]
    public int PageNumber { get; set; }

    protected override void OnParametersSet()
    {
        PagingParameter = ParentpagingParameter;
    }

    protected async Task OnSetPage(int pagenumber)
    {
        await SetPageChanged.InvokeAsync(pagenumber);
    }
}
